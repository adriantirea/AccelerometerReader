package com.model.processing.ann;

/**
 * neural network given weights, initial range of inputs. Use sigmoid function.
 * @author adji
 *
 */
public class NeuralNetwork {

	private double[][] level1Weights;
	private double[][] level2Weights;
	private double[] inputsTrainingRange;
	private double[] inputsTrainingMedian;
	
	private String[] classes;
	
	private double[] inputLayer;
	private double[] hiddenLayer;
	private double[] outputLayer;
	
	
	// outputs in [0,1]
	
	/**
	 * 
	 * @param level1Weights - [hiddenLayer.length][inputNodeWeight.lenght + threshold]
	 * @param level2Weights - [outputlayer.length][hiddenLayer.lenght + threshold]
	 * @param inputsTrainingRange - [rangeForTrainingValuesOnAttribute]
	 */
public NeuralNetwork (double[][] level1Weights, double[][] level2Weights, double[] inputsTrainingRange, double[] inputsTrainingMean, String[] classes) {
		
		assert(classes.length == level2Weights.length);
		
		this.level1Weights = level1Weights;
		this.level2Weights = level2Weights;
		this.inputsTrainingRange = inputsTrainingRange;
		this.inputsTrainingMedian = inputsTrainingMean;
		this.classes = classes;
		
		inputLayer = new double[inputsTrainingRange.length];
		hiddenLayer = new double[level1Weights.length];
		outputLayer = new double[level2Weights.length];
	}
	
	/**
	 * 
	 * @param sample - double[] values that defines an instance. 
	 * @return int the class with higher score.
	 */
	public String classify(double[] sample) {
		
		assert (sample.length == inputLayer.length);
		for (int i = 0; i < inputLayer.length; i++) {
			inputLayer[i] = 2 * (sample[i] - inputsTrainingMedian[i]) / (inputsTrainingRange[i]);
		}
		for (int i = 0; i < hiddenLayer.length; i++) {
			hiddenLayer[i] = 0;
			for (int j = 0; j < inputLayer.length; j++) {
				hiddenLayer[i] += inputLayer[j] * level1Weights[i][j];
			}
			hiddenLayer[i] += level1Weights[i][inputLayer.length]; // threshold
			hiddenLayer[i] = 1 / (1+ Math.exp(-hiddenLayer[i])); // sigmoid
		}
		int classPredicted = -1;
		double maxOutput = Double.MIN_VALUE; 
		for (int i = 0; i < outputLayer.length; i++) {
			outputLayer[i] = 0;
			for (int j = 0; j < hiddenLayer.length; j++) {
				outputLayer[i] += hiddenLayer[j] * level2Weights[i][j];
			}
			outputLayer[i] += level2Weights[i][hiddenLayer.length]; // threshold
			outputLayer[i] = 1 / (1+ Math.exp(-outputLayer[i])); // sigmoid
			//System.out.println("out " + i + " = " + outputLayer[i]);
			if(maxOutput < outputLayer[i]) {
				maxOutput = outputLayer[i];
				classPredicted = i;
			}
		}
		//System.out.println("class predicted is: ---- " + classes[classPredicted] + " ----");
		return classes[classPredicted];
	}
	
//	public static void main (String[] arg) {
//		double[][] level1Weights = new double[][]{{-2.0515425977470243, 0.15684135795723936, 0.7169892649068766, -5.126926164710882, -2.7761149758273627, 7.406701003645165, -1.197019222413828, 1.523170008805327, -3.7343165061050465, -2.8308942207796277, 0.4764135383726356, 2.456793728305181, -1.9522655646165643, 2.929371201553167, -0.5828155335885293, 0.5861308993652542, -1.492580508837773},
//				{1.937098370974634, 1.4133425413812626, 0.5164002514024928, -1.0843540631795576, 1.3149152682433856, 0.0693138192755747, -1.9751236978427127, 1.4035689993359022, -4.882221504205133, -0.033520784544122974, 1.7111101648517641, 0.3882239652477204, 1.4711029054969265, 4.445600241967981, -1.519559656236877, 1.0172168504044563, 0.9467655944946441},
//				{0.8945949494784382, 1.293103190009994, 0.7966911223151412, -2.9795802667726696, -2.379897218194458, -2.7113730149915676, 0.2860923803210862, -2.12403036705254, 1.1457685848578616, -2.837722113132145, 3.5204507849583493, -0.5875825965525606, -1.8535361720383554, -2.955284679029494, 1.9185430519102362, -1.9669230593782712, 1.7941995764018175},
//				{0.29229728625707774, -0.8774080499126249, -0.6183939565066644, 1.9722264570935262, -0.2255758755517598, 1.0600998481132342, -0.06213108848898629, 3.7665328532310944, 4.2891406305724, 0.3686268185956218, -5.252455742537302, -0.5619370976939204, 1.2699266867181709, -1.7833139954095298, -0.5991302055869483, 0.43794352120259394, 3.06025792579495},
//				{-1.2806546293922243, -0.4888948686526633, 0.04120445627978427, -5.67159634151936, -0.992587590362261, 4.104981839534481, -2.5781349642183558, 1.1485109522042223, -1.9261371923006931, 0.42586385229825724, -0.5822647793026869, -0.1478593689274909, 1.411530600997608, -0.7167913450012734, -1.1066419336663744, 1.3406385107745442, -0.10767017048435132},
//				{1.8435234288063191, 0.944329165363054, 0.17058819648444287, -0.6551978672561356, 0.837111394224221, -0.09974799874587097, -1.5903676349088849, 0.7615567203515993, -4.8699061363540395, -0.19027049488087133, 1.6759800209953692, 1.6738745803999924, 1.8676575428455437, 4.8115974014380365, -1.6677093252733233, 1.1050267470030348, 0.49747261585146907},
//				{-0.734120063639483, -0.05613538813033434, 0.26516155423871496, -0.7478015682972051, 0.03546424220396044, 3.5264803551056296, -2.033758000670264, 3.5372220248528463, 2.565225782197167, 3.2749118544382365, -1.3995425506960464, -1.0197744989117596, -1.5464343260547329, 1.8910821705481597, -1.4415720356543984, 1.5955662904792316, 0.8587026204242665},
//				{0.9697510146254585, 0.888751941285123, 0.4567209420278947, -5.046442179274513, -2.4509873443310366, -3.4039197407655992, 0.5060017138695573, -2.7671292367431817, 1.54525780470559, -3.5366288136469866, 3.925342638897361, -0.7165857079655796, -1.2394791474559834, -2.4318487489464404, 2.250397762541796, -2.2952934691046756, 1.777688680206349},
//				{2.148031549232917, 0.17256211794358353, -0.5490643698865799, 3.486455256564846, 1.3014516672090966, 4.860867901660806, -1.7101616594099174, 11.213818096125099, 2.102057246862041, 1.8015402304887735, -3.2932326922613564, -3.2404110036833993, -1.370323959430668, -1.9091781842394402, -3.683930605427349, 3.2281056443352876, 0.17264693808856643},
//				{-0.9946287394148344, 0.6531990039742434, 0.9278401275316378, -3.782717575302059, -1.981152263693302, 1.684545449914097, -1.3955436008115052, 0.9714531590187708, 1.7300669569569795, 1.3784165790727203, 0.8340160284386208, -0.87082346024518, -1.622673951654117, 0.9443829067786198, -0.02027787811065254, 0.10035504408103288, 1.9142110209563463},
//				}; //
//		
//		double[][] level2Weights = new double[][]{{-2.4275773426867215, -6.751751104855059, 2.0611836597710074, 2.567684658912184, -0.7956300683460662, -6.177431384443347, 0.11969353631467301, 2.364220688671148, -2.9009135649940267, 1.8958602502238056, -0.33792740139431526},
//				{ 1.4630789198582297, 4.144372283603788,  3.7670231465716526, -11.037505406081255, 0.6525817489678571, 5.521986541380066, -0.6539908960032703, 4.410214318488659, -5.9473696703753385, 1.752295764062224, -8.024644146453593 },
//				{ 10.78455832650328, -1.361465050951663, -5.246545663395472, -0.6725291378949154, 3.0089475516716795, -1.5215527313822694, -5.923845346602116,-4.980175630130925, -7.1605124249578855, -4.576483829449405, -1.7553767103489142},
//				{-7.124897872927088, 2.127256049741646, -2.930148319732521, 0.9467901995262306, -7.19602269198014, 2.0450742779464157, -3.1885858069331254, -5.175649612165451, -4.301966942100518, -2.1670161051418155, 2.063120145367682},
//				{-5.118449404828127, -0.46636462338461226, -3.5684676660201307, 0.2908123607693836, 2.6597186034137397, -0.649110810579258, 4.614811696327482, -5.104729519452879, 11.957765746515715, 3.2799031237951666, -4.2404986647197145}
//				};
//		  
//	
//		double[] inputsTrainingRange = new double []{9.896, 22.912, 29.117, 18.584, 20.393, 19.69, 8.8,
//				11.144, 12.237, 11.446, 8.209, 1.952, 1.791, 1.831, 10252.153, 48638.306};
//		double[] inputsTrainingMean = new double []{4.246, 19.484, 15.238, 0.061, -3.807, -1.554, 11.233,
//									2.616, 4.209, 3.549, 3.49, -0.007, 0.142, 0.092, 3881.464, -17006.33};
//		String[] classes = new String[]{"run", "walk", "sitUp", "sitDown", "other"};
//		NeuralNetwork nn = new NeuralNetwork(level1Weights, level2Weights, inputsTrainingRange, classes);

		//System.out.println(nn.classify(new double[]{0.7428057193756104, 21.261018753051758, 20.518213033676147, -0.06996811301542039, 9.234978699474595, -1.2699780076363822, 10.7818588106893, 3.093627100744128, 5.086704675469157, 4.088877249147376, 4.77682969706979, -0.02349917364309245, 0.09129699266012709, 0.3409378616196959, 5243.79499606673, -23246.430391061975}));
//	}
}
